name: Pull request validations

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  # check-incomplete-positions:
  #   name: Check for incomplete positions delta
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Backend repository
  #       uses: actions/checkout@v3
  #       with:
  #         repository: digital-magic-club/vrtx-backend
  #         token: ${{ secrets.VRTX_CI_TOKEN }}
  #         ref: main
  #         path: backend

  #     - name: Checkout main branch
  #       uses: actions/checkout@v3
  #       with:
  #         ref: main
  #         path: main

  #     - name: Checkout PR branch
  #       uses: actions/checkout@v3
  #       with:
  #         repository: ${{ github.event.pull_request.head.repo.full_name }}
  #         ref: ${{ github.event.pull_request.head.ref }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         path: pr_repo

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r "$GITHUB_WORKSPACE/backend/functions/dictionaries/requirements.txt"

  #     - name: Run validation script on Main branch
  #       run: |
  #         python "$GITHUB_WORKSPACE/backend/functions/dictionaries/check_incomplete_positions.py" "$GITHUB_WORKSPACE/main/dictionaries" > main_output.txt
  #         grep "Final total sum of incomplete positions" main_output.txt | awk '{print $NF}' > main_count.txt
  #         echo "MAIN_COUNT=$(cat main_count.txt)" >> $GITHUB_ENV

  #     - name: Run validation script on PR branch
  #       run: |
  #         python "$GITHUB_WORKSPACE/backend/functions/dictionaries/check_incomplete_positions.py" "$GITHUB_WORKSPACE/pr_repo/dictionaries" > pr_output.txt
  #         grep "Final total sum of incomplete positions" pr_output.txt | awk '{print $NF}' > pr_count.txt
  #         echo "PR_COUNT=$(cat pr_count.txt)" >> $GITHUB_ENV

  #     - name: Compare Incomplete Positions
  #       run: |
  #         MAIN_COUNT=${MAIN_COUNT:-0}
  #         PR_COUNT=${PR_COUNT:-0}

  #         echo "Main branch incomplete positions: $MAIN_COUNT"
  #         echo "PR branch incomplete positions: $PR_COUNT"

  #         if [[ "$PR_COUNT" -gt "$MAIN_COUNT" ]]; then
  #           INCREASED_BY=$((PR_COUNT - MAIN_COUNT))
  #           echo "❌ ERROR: The number of incomplete positions has increased by +$INCREASED_BY!"
  #           echo "  - Main: $MAIN_COUNT"
  #           echo "  - PR: $PR_COUNT"
  #           echo "This pull request is supposed to **reduce** incomplete positions, but it has increased them instead."
  #           exit 1
  #         else
  #           echo "✅ Check passed! The number of incomplete positions has not increased."
  #         fi

  #     - name: Fail PR if script fails
  #       if: failure()
  #       run: exit 1

  # check-alphabetic-sorting:
  #   name: Check for correct alphabetic sorting
  #   runs-on: macos-latest # So locales are space-sensitive
  #   steps:
  #     - name: Checkout Backend repository
  #       uses: actions/checkout@v3
  #       with:
  #         repository: digital-magic-club/vrtx-backend
  #         token: ${{ secrets.VRTX_CI_TOKEN }}
  #         ref: main
  #         path: backend

  #     - name: Checkout PR branch
  #       uses: actions/checkout@v3
  #       with:
  #         repository: ${{ github.event.pull_request.head.repo.full_name }}
  #         ref: ${{ github.event.pull_request.head.ref }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         path: pr_repo

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r "$GITHUB_WORKSPACE/backend/functions/dictionaries/requirements.txt"

  #     - name: Run validation script
  #       run: |
  #         python "$GITHUB_WORKSPACE/backend/functions/dictionaries/check_alphabetic_sorting.py" "$GITHUB_WORKSPACE/pr_repo/dictionaries"

  #     - name: Fail PR if script fails
  #       if: failure()
  #       run: exit 1

  # check-duplications:
  #   name: Check for duplicated lines
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Backend repository
  #       uses: actions/checkout@v3
  #       with:
  #         repository: digital-magic-club/vrtx-backend
  #         token: ${{ secrets.VRTX_CI_TOKEN }}
  #         ref: main
  #         path: backend

  #     - name: Checkout PR branch
  #       uses: actions/checkout@v3
  #       with:
  #         repository: ${{ github.event.pull_request.head.repo.full_name }}
  #         ref: ${{ github.event.pull_request.head.ref }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         path: pr_repo

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r "$GITHUB_WORKSPACE/backend/functions/dictionaries/requirements.txt"

  #     - name: Run validation script
  #       run: |
  #         python "$GITHUB_WORKSPACE/backend/functions/dictionaries/check_duplicates.py" "$GITHUB_WORKSPACE/pr_repo/dictionaries"

  #     - name: Fail PR if script fails
  #       if: failure()
  #       run: exit 1
